swagger: "2.0"
info:
  description: "API Documentation for Driver Controller , Data Logger `https://app.lithion.in`"
  version: "2.0.1"
  title: "API Documentation "
  termsOfService: "https://app.lithion.in/"
  contact:
    email: "md.aurangzeb@lithion.in"
host: "localhost:3000"
basePath: "/V2/api"
tags:
- name: "Driver Controller"
- name: "Data Logger"  
schemes:
- "http"
- "https"
paths:
  /driver/list:
    get:
      tags:
      - "Driver Controller"
      summary: "Returns the list of drivers"
      description: "Returns the list of all drivers and history cycles."
      operationId: "return driver's list"
      responses:
        200:
          description: "Ok.. Data Found."
        804:
          description: "Data Not Found."
        404:
          description: "Path Not Found" 
  /driver/getLastCycle:
    post:
      tags:
      - "Driver Controller"
      summary: "Gives the last cycle Info"
      description: "For Given Driver   it returns the his Last cycle info"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "driverId"
        in: "formData"
        description: "`Parameter : driverId` "
        required: true
        type: string
      responses:
        200:
          description: "Data Found Successfully"
          schema:
            $ref: '#/definitions/driverCurrentInfoSchema'
        801:
          description: "No Data Found"
        804:
          description: "Missing Parameter"
  /driver/status:
    get:
      tags:
      - "Driver Controller"
      summary: "Gives the current status of Driver"
      description: " Given the driverId   it returns the current status" 
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - in: "query"
        name: "driverId"
        type: string
        description: "`Parameter : driverId` "
        required: true
      responses:
        200:
          description: "Data Found Successfully"
          schema:
            $ref: '#/definitions/driverCurrentInfoSchema'
        700:
          description: "Invalid Parameter"
        802:
          description: "Invalid Driver ID"
  /driver/profile:
    post:
      tags:
      - "Driver Controller"
      summary: "Gives the Profile of Driver"
      description: "From driverId   it returns Driver Profile"
      operationId: "getProfile"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "driverId"
        in: "formData"
        description: "ID of Driver whose Profile needed"
        required: true
        type: "string"
      responses:
        200:
          description: "Data Found Successfully"
        801:
          description: "No Data Found"
        804:
          description: "Missing Parameter"
  /driver/editProfile:
    post:
      tags: 
      - "Driver Controller"
      summary: "Edits the profile of Driver" 
      description: "From the given Parameters   it Updates Driver Profile."
      consumes: 
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters: 
      - name: "driverId"
        in: "formData"
        description: "ID of Driver"
        required: true
        type: "string"
      - name: "name"
        in: "formData"
        description: "Name of Driver"
        required: true
        type: "string"
      - name: "phone"
        in: "formData"
        description: "Phone No of Driver"
        required: true
        type: "string"
      - name: "accNumber"
        in: "formData"
        description: "Account Number"
        required: true
        type: "string"
      - name: "dob"
        in: "formData"
        description: "DOB of Driver YYYY-MM-DD"
        required: true
        type: "string"
        format: "date"
      - name: "pan"
        in: "formData"
        description: "PAN Card "
        required: true
        type: "string"
      - name: "licenseNum"
        in: "formData"
        description: "License Number"
        required: true  
        type: "string"  
        
      responses:
        200:
          description: "Driver Details Updated Successfully"
        701:
          description: "DataBase Error"
        804:
          description: "Missing Parameter"
          
  /driver/assignedDrivers:
    get:
      tags: 
      - "Driver Controller"
      summary: "Gives the List of assigned Drivers"
      description: " Gives the list of all those Drivers whose assetId is not NULL or Empty"
      produces:
      - application/json
      responses:
        200:
         description: "Data Found Successfully"
        801:
          description: "No Data Found"
  
  /driver/UnAssignedDrivers:
    get:
      tags: 
      - "Driver Controller"
      summary: "Gives the List of Not assigned Drivers"
      description: " Gives the list of all those Drivers whose assetId is  NULL or Empty"
      produces:
      - application/json
      responses:
        200:
         description: "Data Found Successfully"
        801:
          description: "No Data Found"     
          
  /driver/driverListForScore:
    post:
      tags:
      - "Driver Controller"
      summary: "Gives the List of Driver with its score"
      description: "Based on period   it will gives the driver score details"
      consumes:
      - "application/x-www-form-urlencoded"
      produces: 
      - "application/json"
      parameters:
      - name: "date"
        in : "formData"
        description: "YYYY-MM-DD"
        type: string
        format: "date"
        required: true
      - name: "fleetId"
        in : "formData"
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/DriverScoreSchema'
        801:
          description: "Invalid Fleet Id or No data found"
        804:
          description: "Missing Parameter"  
  /driver/cycleHistory:
    post:
      tags:
      - "Driver Controller"
      summary: "Gives the History Cycles of a Driver"
      description: " Based on the type we give history records of a Driver"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "driverId"
        in: "formData"
        type: string
        required: true
        description: "Driver ID"
      - name: "type"
        in: "formData"
        type: number
        required: true
        description: Type will be 1 or 2 
      - name: "historyNumber"
        in: "formData"
        type: number
        description: "History No if Selected Type=1"
      - name: "fromDate"
        in : "formData"
        type: string
        format: "date"
        description: "Require if selected Type=2"
      - name: "toDate"
        in: "formData"
        type: string
        format: "date"
        description: "Require if selected Type=2"
        
      responses:
        200:
          description: "History Cycle Record Found Successfully"
        700:
          description: " Invalid type"
        801:
          description: "No data Found"
        804:
          description: "Missing Parameters"
  /driver/score:
    post:
      tags: 
      - "Driver Controller"
      summary: "Gives the rank and Score of Driver"
      description: "For the given Driver Id   it gives back score Related."
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters: 
      - name: "driverId"
        in: "formData"
        type: string
        description: "Driver ID"
      - name: "date"
        in: "formData"
        type: string
        format: "date"
        
      responses:
        200:
          description: "Score and Rank Found Successfully"
          schema:
            $ref: "#/definitions/DriverScoreSchema"
        800:  
          description: "System error.Try again later"
        801:
          description: "No Data Found"
        804:
          description: "Missing Parameters"
       
  /driver/driverGeofence:
    post:
      tags: 
      - "Driver Controller"
      summary: "Gives the GeoFence of a Driver"
      description: "Gives the GeoFence of a Driver"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "driverId"
        in: "formData"
        type: string
        required: true
      - name: "date"
        in: "formData"
        type: string
        format: "date"
        required: true
      responses:
        200:
          description: "History Cycle Record"
        801:
          description: "No Data Found"
        804:
          description: " Missing Parameters"
  /driver/getDriverLspInfo:
    post:
      tags: 
      - "Driver Controller"
      summary: "Gives the LSP information of a Driver"
      description: "Gives the LSP information of a Driver"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "driverId"
        in: "formData"
        type: string
        required: true
      responses:
        200:
          description: "Details fetch successfully"
        801:
          description: "No Data Found"
        804:
         description: " Missing Parameters"   
  /dl/editDataLogger:
    post:
      tags:
      - "Data Logger"
      summary: "Updates Data Logger Details"
      description: "The Data Logger is updates based on Parameters Given."
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "dataLoggerId"
        in : "formData"
        type: string
        required: true
      - name: "mNum"
        in: "formData"
        description: "Mobile Number"
        type: string
        required: true
      - name: "sNum"
        in: "formData"
        type: string
        required: true
        description: "Serial Number"
      - name: "dlHardwareVersion"
        in: "formData"
        type: "string"
        description: "HardWare Version"
        required: true
      - name: "dlSoftwareVersion"
        in: "formData"
        type: string
        description: "SoftWare Version"
        required: true
      - name: "updatedBy"
        in: "formData"
        type: string
        description: "Updated By"
        required: true    
      responses:
        200:
          description: "Data Logger details updated"
          schema:
            $ref: '#/definitions/dataloggerSchema'
        701:
          description: "DataBase Error"
        804:
          description: "Missing Parameters"
  
  /dl/fetchDlDetails:
    post:
      tags:
      - "Data Logger"
      summary: "Fetch all details of a Data Logger"
      description: "From Data logger Id , gives all details of a Data Logger"
      consumes: 
      - "application/x-www-form-urlencoded"
      produces: 
      - "application/json"
      parameters: 
      - name: "dlId"
        in: "formData"
        type: string
        description: "Data Logger ID"
      responses:
        200:
          description: "Data Fetched Successfully"
          schema:
            $ref: "#/definitions/dataloggerSchema"
        801:
          description: "No Data Found"
        804:
          description: "Missing Parameter Data Logger ID"
  
  /dl/DlInfo:
    post:
      tags: 
      - "Data Logger"
      summary: "Gives the Data Logger Information and Battery if Associated"
      description: "Gives the Data Logger Information and Battery if Associated"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters: 
      - name: "dataLoggerId"
        in: "formData"
        description: "Data Logger ID"
        type: "string"
        
      responses:
        200:
          description: "Data Fetched Successfully"
        801:
          description: "No Data Found"
        804:
          description: "Missing Parameter Data Logger ID"
  /dl/fetchContactDetails:
    get:
      tags:
      - "Data Logger"
      summary: "Gives the Contact Details if Data Logger is Associated with a Battery"
      produces:
      - "application/json"
      responses:
        200:
          description: "Data Fetched Successfully"
          schema:
            $ref: "#/definitions/dataloggerSchema"
        801:
          description: "No Data Found"
  
  /dl/sendingOnmessage:
    post:
      tags:
      - "Data Logger"
      summary: "Sends On Message to Data Logger of given Battery"
      description: "Sends On Message to Data Logger of given Battery known by its assetId "
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "assetId"
        in: "formData"
        type: string
        description: "Asset ID for a Battery"
      responses:
        200:
          description: "Message delievered successfully"
        800:
          description: "Message Sending Failed."
        801:
          description: "Message failed to delievered"
        804:
          description: "Missing Parameters"
  
  /dl/sendingOffmessage:
    post:
      tags:
      - "Data Logger"
      summary: "Sends Off Message to Data Logger of given Battery"
      description: "Sends Off Message to Data Logger of given Battery known by its assetId "
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "assetId"
        in: "formData"
        type: string
        description: "Asset ID for a Battery"
      responses:
        200:
          description: "Message delievered successfully"
        800:
          description: "Message Sending Failed."
        801:
          description: "Message failed to delievered"
        804:
          description: "Missing Parameters"        
          
      
definitions:
  driverCurrentInfoSchema:
    type: "object"
    required: 
    - "driverName"
    - "driverId"
    
    properties:
      driverName:
        type: string
      driverId:
        type: string
      assetId:
        type: string
      kmDriven:
        type: number
        default: 0
      startAh:
        type: number
      usedAh:
        type: number
      ahLeft:
        type: number
      kmLeft:
        type: number
      projectedEarning:
        type: number
      amount:
        type: number
      paidAmount:
        type: number
        default: 0
      paymentStatus:
        type: boolean
        default: false
      paymentId:
        $ref: '#/definitions/actorTransactions'
      paymentType:
        type: string
        enum: ['CASH', 'PAYTM', 'NA']
        default: 'NA'
      fromLspId:
        type: string
      toLspId:
        type: string
      history:
        type: array
        items:
          $ref: '#/definitions/historyCyclesSchema'
      AH_Left:
        type: number
      KM_Left:
        type: number
      earnedCurrCycle:
        type: number
  
  historyCyclesSchema:
    type: "object"
    required: 
    - "cycleNo"
    - "projectedEarning"
    - "date"
    - "kmDriven"
    - "capUsed"

    properties:
      assetId:
        type: string
      cycleNo:
        type: number
        default: 0
      projectedEarning:
        type: number
        default: 0
      date:
        type: string
        format: "date"
      fromDate:
        type: string
        format: "date-time"
      toDate:
        type: string
        format: "date-time"
      kmDriven:
        type: number
        default: 0
      capUsed:
        type: number
        default: 0
      amount:
        type: number
        default: 0
      paidAmount:
        type: number
        default: 0
      paymentStatus:
        type: boolean
        default: false
      paymentId:
        $ref: '#/definitions/actorTransactions'
      paymentType:
        type: string
        enum: ['CASH', 'PAYTM', 'NA']
        default: 'NA'
      fromLspId:
        type: string
      toLspId:
        type: string
  actorTransactions:
    type: "object"
    required: 
    - "actorId"
    - "orderId"
    - "custId"
    - "txnAmount"
    - "channelId"
    
    properties:
      actorId:
        type: string
      orderId:
        type: string
      paytmRawResp:
        type: object
      custId:
        type: string
      txnAmount:
        type: number
      channedId:
        type: string
      status: 
        type: string
      bankName:
        type: string
      txnDate:
        type: string
        format: "date"
      txnId:
        type: string
      respCode:
        type: string
      paymentMode:
        type: string
      bankTxnId:
        type: string
      currency:
        type: string
      gatewayName:
        type: string
      respMsg:
        type: string
  
  DriverScoreSchema:
    type: "object"
    required: 
    - "driverId"
    - 'Score'
    - 'gpsLoss'
    - 'from'
    
    properties:
      driverId:
        type: string
      rank:
        type: number
      Score:
        type: number
      KM:
        type: number
      assetId:
        type: string
      drivingEfficiency:
        type: string
      from:
        type: string
        format: "date"
      gpsLoss:
        type: number
      mileage:
        type: string
      safetyScore:
        type: string
      to:
        type: string
        format: "date"
  
  dataloggerSchema:
    type: "object"
    required: 
    - "dataLoggerId"
    - "hardwareVersion"
    - "softwareVersion"
    - "sNumber"
    - "mNumber"
    properties:
      dataLoggerId:
        type: string
        uniqueItems: true
      hardwareVersion:
        type: string
      softwareVersion:
        type: string
      sNumber:
        type: string
      mNumber:
        type: string
        uniqueItems: true  
      simVendorName:
        type: string
      vendorName:
        type: string
      isAssociated:
        type: number
        default: 1
      updatedMobileNumber:
        type: string
        uniqueItems: true
      updatedBy:
        type: string
      createdBy:
        type: string
  
  batteryPackSchema:
    type: "object"
    required:
    - ""
    properties:
      batteryPackId:   
        type     : string 
      lowerThreshold :   
        type: number 
      associatedBmsId:   
        type     : string 
      associatedDataloggerId:   
        type     : string 
      cellVendorName:  
        type : string
      cabinetVersion:   
        type     : string 
      numOfCells :  
        type: number
      cellNum1:   
        type : string
      cellNum2:   
        type : string
      cellNum3:   
        type : string
      cellNum4:   
        type : string
      cellNum5:   
        type : string
      cellNum6:   
        type : string
      cellNum7:   
        type : string
      cellNum8:   
        type : string
      cellNum9:   
        type : string
      cellNum10:   
        type : string
      cellNum11:   
        type : string
      cellNum12:   
        type : string
      cellNum13:   
        type : string
      cellNum14:   
        type : string
      cellNum15:   
        type : string
      cellNum16:   
        type : string
      isActive:   
        type    : number 
        default : 1
      isAssigned:   
        type    : number 
        default : 0
      batteryStatus :   
        type    : number 
        default : 10
      submittedBy:  
          type: string 
      updatedBy:  
          type: string
